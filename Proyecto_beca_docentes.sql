--ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
--Crear en SYSTEM
--USUARIO BDY1102_ET_FA - 
CREATE USER BDY1102_ET_FA IDENTIFIED BY "Examen.T2023_FA"
DEFAULT TABLESPACE "USERS"
TEMPORARY TABLESPACE "TEMP";
ALTER USER BDY1102_ET_FA QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO BDY1102_ET_FA;

--USUARIO BDY1102_ET_FA_DES
CREATE USER BDY1102_ET_FA_DES IDENTIFIED BY "Examen.T2023_FA"
DEFAULT TABLESPACE TEMP
TEMPORARY TABLESPACE "TEMP";
ALTER USER BDY1102_ET_FA_DEV QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO BDY1102_ET_FA_DES;

--PERMISOSS USUARIO BDY1102_ET_FA
GRANT CREATE TABLE TO BDY1102_ET_FA;
GRANT CREATE SEQUENCE TO BDY1102_ET_FA;
--con esto el user BDY1102_ET_FA puede crear indices, modificar y eliminar sus propias tablas

--PERMISOS USUARIO BDY1102_ET_FA_DES
GRANT CREATE VIEW TO BDY1102_ET_FA_DES;
GRANT CREATE MATERIALIZED VIEW TO BDY1102_ET_FA_DES;

--CREAMOS USUARIOS Y CARGAMOS LAS TABLAS A BDY1102_ET_FA

--ACCESO A LOS DATOS USUARIO BDY1102_ET_FA_DES
GRANT SELECT ON BDY1102_ET_FA.ANTECEDENTES_LABORALES TO  BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.ANTECEDENTES_PERSONALES TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.INSTITUCION TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.PAIS TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.PASANTIA_PERFECCIONAMIENTO TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.POSTULACION_PASANTIA_PERFEC TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.PTJE_ANNOS_EXPERIENCIA TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.PTJE_PAIS_POSTULA TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.PTJE_PUEBLO_INDIGENA TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.PUEBLO_INDIGENA TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.REGION TO BDY1102_ET_FA_DES;
GRANT SELECT ON BDY1102_ET_FA.SERVICIO_LOCAL_EDUCP TO BDY1102_ET_FA_DES;

GRANT SELECT, INSERT, UPDATE, DELETE ON BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION TO BDY1102_ET_FA_DES;
GRANT SELECT, INSERT, UPDATE, DELETE ON BDY1102_ET_FA.RESULTADO_POSTULACION TO BDY1102_ET_FA_DES;

--CREACION DE USUARIOS lista


-- 3. GENERACION DE INFORME DE POSTULANTES // SE GENERAN LAS CONSULTAS EN BDY1102_ET_FA_DES

--para que se actualicen los datos de las tablas crearemos una vista

CREATE OR REPLACE VIEW BDY1102_ET_FA_DES.V_INFO_POSTULANTES AS
SELECT ap.numrun||'-'||ap.dvrun as RUN,
       ap.apaterno,
       ap.amaterno,
       ap.pnombre ||' '||ap.snombre as NOMBRES,
    CASE WHEN cod_pueblo_ind IS NOT NULL THEN 'SI'
       ELSE 'NO'
    END AS PUEBLO_INDIGENA,
       TO_CHAR(ap.fecha_nacimiento, 'DD/MM/YYYY') as FECHA_NACIMIENTO,
       COUNT(al.cod_serv_educp) as INSTITUCIONES,
       SUBSTR(TO_CHAR(ap.numrun), 4, 1) ||''||
       TO_CHAR(TRUNC(EXTRACT(YEAR FROM ap.fecha_nacimiento) * 0.7))||''||
       TO_CHAR(TO_NUMBER(SUBSTR(TO_CHAR(ap.numrun), -3)) - 1)||''||
    CASE 
        WHEN cod_pueblo_ind IS NULL THEN UPPER(SUBSTR(apaterno, 1, 2))
        ELSE UPPER(SUBSTR(amaterno, 1, 2))
    END ||'@direduca.edu' as correo
FROM BDY1102_ET_FA.ANTECEDENTES_PERSONALES AP
JOIN BDY1102_ET_FA.ANTECEDENTES_LABORALES AL ON AL.NUMRUN = AP.NUMRUN
GROUP BY  ap.numrun, ap.dvrun, ap.apaterno, ap.amaterno, ap.pnombre, ap.snombre, ap.cod_pueblo_ind, ap.fecha_nacimiento
ORDER BY ap.apaterno, ap.amaterno, ap.pnombre, ap.snombre;

--consulta para verificar los datos de la vista a medida que se vayan actualizando los datos de las tablas

select * from V_INFO_POSTULANTES;


-- 4. PROCESO PL/SQL


DECLARE

RUN_POSTULANTE VARCHAR2(20);
NOMBRE_POSTULANTE VARCHAR2(100);
PTJE_PUEBLO_INDIGENA NUMBER;
PTJE_EXPERIENCIA NUMBER;
PTJE_PAIS NUMBER;
PTJE_EXTRA NUMBER;
PTJE_FINAL_POST NUMBER;
RESULTADO_POST VARCHAR2(20);
    CURSOR CUR_POSTULANTE IS SELECT AP.NUMRUN ||'-'||AP.DVRUN AS RUN_POSTULANTE,
                                     AP.PNOMBRE ||' '|| AP.SNOMBRE ||' '||AP.APATERNO||' '||AP.AMATERNO AS NOMBRE_POSTULANTE, 
                                     AP.COD_PUEBLO_IND,
                                     TRUNC(MONTHS_BETWEEN(SYSDATE, fecha_contrato) / 12) AS anios_experiencia,
                                     inst.cod_pais,
                                     TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(fecha_nacimiento, 'DD/MM/RR')) / 12) AS edad
                                     FROM BDY1102_ET_FA.ANTECEDENTES_PERSONALES AP
                                     JOIN BDY1102_ET_FA.ANTECEDENTES_LABORALES AL ON AL.NUMRUN = AP.NUMRUN
                                     JOIN BDY1102_ET_FA.POSTULACION_PASANTIA_PERFEC pp ON pp.NUMRUN = AP.NUMRUN
                                     JOIN BDY1102_ET_FA.PASANTIA_PERFECCIONAMIENTO pf ON pf.COD_PROGRAMA = PP.COD_PROGRAMA
                                     JOIN BDY1102_ET_FA.INSTITUCION inst ON inst.cod_inst = pf.cod_inst
                                     WHERE TO_DATE(al.fecha_contrato, 'DD/MM/RR') = (
                                     SELECT MIN(TO_DATE(al2.fecha_contrato, 'DD/MM/RR'))
                                     FROM BDY1102_ET_FA.ANTECEDENTES_LABORALES al2
                                     WHERE al2.numrun = al.numrun
                                    );
BEGIN 
 EXECUTE IMMEDIATE ('DELETE FROM BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION'); 
 FOR R_POSTULANTE  IN CUR_POSTULANTE
 LOOP
    IF R_POSTULANTE.COD_PUEBLO_IND = 100 THEN
       PTJE_PUEBLO_INDIGENA := 1010;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 200 THEN
       PTJE_PUEBLO_INDIGENA := 1010;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 300 THEN
       PTJE_PUEBLO_INDIGENA := 1020;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 400 THEN
       PTJE_PUEBLO_INDIGENA := 1030;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 500 THEN
       PTJE_PUEBLO_INDIGENA := 1040;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 600 THEN
       PTJE_PUEBLO_INDIGENA := 1050;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 700 THEN
       PTJE_PUEBLO_INDIGENA := 1060;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 800 THEN
       PTJE_PUEBLO_INDIGENA := 1055;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 900 THEN
       PTJE_PUEBLO_INDIGENA := 1070;
    ELSIF R_POSTULANTE.COD_PUEBLO_IND = 1000 THEN
       PTJE_PUEBLO_INDIGENA := 1080;
    ELSE
       PTJE_PUEBLO_INDIGENA := 0;
    END IF;
    
    
    IF R_POSTULANTE.ANIOS_EXPERIENCIA > 0 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=2 THEN
        PTJE_EXPERIENCIA := 500;
    ELSIF R_POSTULANTE.ANIOS_EXPERIENCIA >= 3 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=10 THEN
        PTJE_EXPERIENCIA := 1000;
    ELSIF R_POSTULANTE.ANIOS_EXPERIENCIA >= 11 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=15 THEN
        PTJE_EXPERIENCIA := 1010;
    ELSIF R_POSTULANTE.ANIOS_EXPERIENCIA >= 16 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=20 THEN
        PTJE_EXPERIENCIA := 1020;
    ELSIF R_POSTULANTE.ANIOS_EXPERIENCIA >= 21 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=23 THEN
        PTJE_EXPERIENCIA := 1030;
    ELSIF R_POSTULANTE.ANIOS_EXPERIENCIA >= 24 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=26 THEN
        PTJE_EXPERIENCIA := 1040;
    ELSIF R_POSTULANTE.ANIOS_EXPERIENCIA >= 27 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=30 THEN
        PTJE_EXPERIENCIA := 1050;
    ELSIF R_POSTULANTE.ANIOS_EXPERIENCIA >= 31 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=35 THEN
        PTJE_EXPERIENCIA := 1100;
    ELSIF R_POSTULANTE.ANIOS_EXPERIENCIA >= 36 AND R_POSTULANTE.ANIOS_EXPERIENCIA <=40 THEN
        PTJE_EXPERIENCIA := 1200;
    END IF;
    
    IF R_POSTULANTE.COD_PAIS = 10 THEN
        PTJE_PAIS := 1050;
    ELSIF R_POSTULANTE.COD_PAIS = 11 THEN
        PTJE_PAIS := 1010;
    ELSIF R_POSTULANTE.COD_PAIS = 12 THEN
        PTJE_PAIS := 1040;
    ELSIF R_POSTULANTE.COD_PAIS = 13 THEN
        PTJE_PAIS := 1020;
    ELSIF R_POSTULANTE.COD_PAIS = 14 THEN
        PTJE_PAIS := 1030;
    ELSIF R_POSTULANTE.COD_PAIS = 15 THEN
        PTJE_PAIS := 1060;
    ELSIF R_POSTULANTE.COD_PAIS = 16 THEN
        PTJE_PAIS := 1000;
    END IF;
    
    IF R_POSTULANTE.EDAD >= 55 THEN
        PTJE_EXTRA := ROUND(PTJE_PUEBLO_INDIGENA + PTJE_EXPERIENCIA + PTJE_PAIS) * 0.15;
    ELSE
        PTJE_EXTRA := 0;
    END IF;

    PTJE_FINAL_POST := ROUND(ptje_experiencia + ptje_extra + ptje_pais + ptje_pueblo_indigena);
    

    IF PTJE_FINAL_POST >= 2400 THEN
        RESULTADO_POST := 'SELECCIONADO';
    ELSE
        RESULTADO_POST := 'NO SELECCIONADO';
    END IF;

INSERT INTO BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION (
    RUN_POSTULANTE,
    NOMBRE_POSTULANTE,
    PTJE_PUEBLO_INDIGENA,
    PTJE_ANNOS_EXP,
    PTJE_PAIS_POSTULA,
    PTJE_EXTRA
) VALUES (
    R_POSTULANTE.RUN_POSTULANTE,
    R_POSTULANTE.NOMBRE_POSTULANTE,
    PTJE_PUEBLO_INDIGENA,
    PTJE_EXPERIENCIA,
    PTJE_PAIS,
    PTJE_EXTRA
);

INSERT INTO BDY1102_ET_FA.RESULTADO_POSTULACION( RUN_POSTULANTE,
                                                 PTJE_FINAL_POST,
                                                 RESULTADO_POST
)VALUES  (
    R_POSTULANTE.RUN_POSTULANTE,
    PTJE_FINAL_POST,
    RESULTADO_POST
);

END LOOP;

END;

--verificamos que se hayan insertado los datos en las tablas
 
SELECT * FROM BDY1102_ET_FA.RESULTADO_POSTULACION;
SELECT * FROM  BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION;


--4.2 INFORME PARA OPTIMIZACION DE CONSULTA
-- OPTIMIZACION DE CONSULTA CON INDEX

--Consultamos primero en BDY1102_ET_FA_DES para ver el rendimiento de la consulta sin indices
SELECT 
    DP.NOMBRE_POSTULANTE,
    DP.PTJE_PUEBLO_INDIGENA,
    DP.PTJE_ANNOS_EXP,
    DP.PTJE_PAIS_POSTULA,
    DP.PTJE_EXTRA,
    RP.PTJE_FINAL_POST,
    RP.RESULTADO_POST
FROM BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION DP
JOIN BDY1102_ET_FA.RESULTADO_POSTULACION RP ON DP.RUN_POSTULANTE = RP.RUN_POSTULANTE
WHERE RP.PTJE_FINAL_POST > (SELECT ROUND(AVG(PTJE_FINAL_POST), 0)
                            FROM BDY1102_ET_FA.RESULTADO_POSTULACION
)
ORDER BY RP.PTJE_FINAL_POST DESC;


-- Cambiamos al usuario BDY1102_ET_FA para crear los indices

--acelera las busquedas joins que usan la columna RUN_POSTULANTE en la tabla RESULTADO_POSTULACION
CREATE INDEX IDX_RESULTADO_RUN ON BDY1102_ET_FA.RESULTADO_POSTULACION(RUN_POSTULANTE);
--Reduce el tiempo de ejecucion en joins con RESULTADO_POSTULACION que tambn se hacen sobre RUN_POSTULANTE
CREATE INDEX IDX_DETALLE_RUN ON BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION(RUN_POSTULANTE);
--Mejora el rendimiento de las consultas que ordenan por ORDER BY, filtran por comparacion WHERE, calculan el promedio
CREATE INDEX IDX_RESULTADO_PUNTAJE ON BDY1102_ET_FA.RESULTADO_POSTULACION(PTJE_FINAL_POST);


--Realizamos la consulta optimizada en BDY1102_ET_FA_DES
SELECT 
    DP.NOMBRE_POSTULANTE,
    DP.PTJE_PUEBLO_INDIGENA,
    DP.PTJE_ANNOS_EXP,
    DP.PTJE_PAIS_POSTULA,
    DP.PTJE_EXTRA,
    RP.PTJE_FINAL_POST,
    RP.RESULTADO_POST
FROM BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION DP
JOIN BDY1102_ET_FA.RESULTADO_POSTULACION RP ON DP.RUN_POSTULANTE = RP.RUN_POSTULANTE
WHERE RP.PTJE_FINAL_POST > (SELECT ROUND(AVG(PTJE_FINAL_POST), 0)
                            FROM BDY1102_ET_FA.RESULTADO_POSTULACION
)
ORDER BY RP.PTJE_FINAL_POST DESC;   


-- Si queremos ver el plan de ejecucion
EXPLAIN PLAN FOR
SELECT 
    DP.NOMBRE_POSTULANTE,
    DP.PTJE_PUEBLO_INDIGENA,
    DP.PTJE_ANNOS_EXP,
    DP.PTJE_PAIS_POSTULA,
    DP.PTJE_EXTRA,
    RP.PTJE_FINAL_POST,
    RP.RESULTADO_POST
FROM BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION DP
JOIN BDY1102_ET_FA.RESULTADO_POSTULACION RP ON DP.RUN_POSTULANTE = RP.RUN_POSTULANTE
WHERE RP.PTJE_FINAL_POST > (SELECT ROUND(AVG(PTJE_FINAL_POST), 0)
                            FROM BDY1102_ET_FA.RESULTADO_POSTULACION
)
ORDER BY RP.PTJE_FINAL_POST DESC;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

-- nos aparece de resultado 4 y el 7 lo cual esta optimizado, ya que nos permite reducir el numero de filas leidos disminuyendo los costos, 
-- evitando el escaneo completo de las tablas evitando un full table scan.


-- Si queremos crear una vista por los permisos del usuario BDY1102_ET_FA_DES
CREATE OR REPLACE VIEW POSTULANTES_SELECCIONADOS AS
SELECT 
    DP.NOMBRE_POSTULANTE,
    DP.PTJE_PUEBLO_INDIGENA,
    DP.PTJE_ANNOS_EXP,
    DP.PTJE_PAIS_POSTULA,
    DP.PTJE_EXTRA,
    RP.PTJE_FINAL_POST,
    RP.RESULTADO_POST
FROM BDY1102_ET_FA.DETALLE_PUNTAJE_POSTULACION DP
JOIN BDY1102_ET_FA.RESULTADO_POSTULACION RP ON DP.RUN_POSTULANTE = RP.RUN_POSTULANTE
WHERE RP.PTJE_FINAL_POST > (SELECT ROUND(AVG(PTJE_FINAL_POST), 0)
                            FROM BDY1102_ET_FA.RESULTADO_POSTULACION
)
ORDER BY RP.PTJE_FINAL_POST DESC;

--Si queremos ver la vista
SELECT * FROM POSTULANTES_SELECCIONADOS;